{"version":3,"sources":["components/Register/styled-components/Header.js","components/Register/Register.js"],"names":["Header","styled","h1","Register","RegisterSchema","Yup","shape","name","min","max","required","email","gender","phone","matches","terms_services","handleImageUpload","alert","className","initialValues","image_url","validationSchema","onSubmit","values","setSubmitting","JSON","stringify","setTimeout","touched","errors","handleChange","handleBlur","handleSubmit","isSubmitting","Container","fluid","Row","Col","xs","lg","md","sm","src","alt","rounded","align","size","uploadURL","fileType","defaultImg","Button","variant","onClick","htmlFor","type","id","value","onChange","onBlur","password","span","offset","block","disabled"],"mappings":"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","file":"static/js/4.6d2e3b00.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nconst Header = styled.h1`\r\n  font-family: \"DM Sans\", sans-serif;\r\n  font-family: DM Sans;\r\n  font-style: normal;\r\n  font-weight: bold;\r\n  font-size: 64px;\r\n  line-height: 83px;\r\n  padding-top: 40px;\r\n  padding-left: 40px;\r\n  color: #011627;\r\n  @media (max-width: 968px) {\r\n    font-size: 56px;\r\n  }\r\n  @media (max-width: 768px) {\r\n    font-size: 34px;\r\n  }\r\n`;\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\nimport * as Yup from \"yup\";\r\nimport Header from \"./styled-components/Header\";\r\nimport AvatarUploader from \"react-avatar-uploader\";\r\nexport default function Register() {\r\n  const RegisterSchema = Yup.object().shape({\r\n    name: Yup.string()\r\n      .min(4, \"Too Short!\")\r\n      .max(20, \"Too Long!\")\r\n      .required(\"Username Required\"),\r\n    email: Yup.string().email().required(\"Email Required\"),\r\n    gender: Yup.string().required(\"Please Select a gender\"),\r\n    phone: Yup.string()\r\n      .matches(/[0-9]{10}/g, \"Must contain 10 numbers without any spaces\")\r\n      .min(10, \"Phone Number must contain 10 Digits\")\r\n      .max(10, \"Phone Number must contain 10 Digits only\")\r\n      .required(\"Phone number valid phone number required\"),\r\n    terms_services: Yup.boolean().required(\"please click on checkbox\"),\r\n  });\r\n\r\n  const handleImageUpload = () => {\r\n    alert(\"image uploaded\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"body-main\">\r\n      <Formik\r\n        initialValues={{\r\n          name: \"\",\r\n          email: \"\",\r\n          phone: \"\",\r\n          gender: \"\",\r\n          image_url: \"PNGs/dummy_profile_pic.png\",\r\n          terms_services: false,\r\n        }}\r\n        validationSchema={RegisterSchema}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          alert(JSON.stringify(values));\r\n          setTimeout(() => {\r\n            setSubmitting(false);\r\n          }, 400);\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          touched,\r\n          errors,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting,\r\n        }) => (\r\n          <form onSubmit={handleSubmit}>\r\n            <Container fluid>\r\n              <Row>\r\n                <Col xs=\"12\" lg=\"8\" md=\"7\" sm=\"6\">\r\n                  <div className=\"container-img\">\r\n                    <Header>My First Project with DesignString</Header>\r\n                    <img\r\n                      src=\"PNGs/background_illustration.png\"\r\n                      alt=\"register\"\r\n                      rounded=\"true\"\r\n                      className=\"register-img\"\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col xs=\"12\" lg=\"4\" md=\"5\" sm=\"6\">\r\n                  <br />\r\n                  <br />\r\n                  <div align=\"center\">\r\n                    <AvatarUploader\r\n                      size={100}\r\n                      name=\"image\"\r\n                      uploadURL=\"http://localhost:3000\"\r\n                      fileType={\"image/png\"}\r\n                      defaultImg={values.image_url}\r\n                    />\r\n                    <br />\r\n                    <br />\r\n                    <Button variant=\"outline-dark\" onClick={handleImageUpload}>\r\n                      Upload Profile Photo\r\n                    </Button>\r\n                  </div>\r\n\r\n                  <div className=\"form-group has-search\">\r\n                    <span className=\"fa fa-user form-control-feedback\"></span>\r\n                    <label htmlFor=\"name\">Full Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"name\"\r\n                      name=\"name\"\r\n                      className=\"form-control\"\r\n                      value={values.name}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                    />\r\n                  </div>\r\n                  {errors.name && touched.name ? (\r\n                    <div className=\"alert-message\">{errors.name}</div>\r\n                  ) : null}\r\n                  <br />\r\n                  <div className=\"form-group has-search\">\r\n                    <span className=\"fas fa-envelope form-control-feedback\"></span>\r\n                    <label htmlFor=\"Email\">Email ID</label>\r\n                    <input\r\n                      type=\"email\"\r\n                      id=\"email\"\r\n                      name=\"email\"\r\n                      className=\"form-control\"\r\n                      value={values.email}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                    />\r\n                  </div>\r\n                  {errors.email && touched.email ? (\r\n                    <div className=\"alert-message\">{errors.email}</div>\r\n                  ) : null}\r\n                  <br />\r\n                  <div className=\"form-group has-search\">\r\n                    <span className=\"fa fa-lock form-control-feedback\"></span>\r\n                    <label htmlFor=\"phone\">Phone Number</label>\r\n                    <input\r\n                      type=\"phone\"\r\n                      id=\"phone\"\r\n                      name=\"phone\"\r\n                      className=\"form-control\"\r\n                      value={values.password}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                    />\r\n                  </div>\r\n                  {errors.phone && touched.phone ? (\r\n                    <div className=\"alert-message\">{errors.phone}</div>\r\n                  ) : null}\r\n\r\n                  <label htmlFor=\"radio-group\">Gender</label>\r\n                  <div className=\"form-check\" id=\"radio-group\">\r\n                    <Row>\r\n                      <Col\r\n                        md={{ span: 0, offset: 0 }}\r\n                        xs={{ span: 0, offset: 0 }}\r\n                      >\r\n                        <label className=\"btn btn-outline-success\">\r\n                          <input\r\n                            type=\"radio\"\r\n                            name=\"gender\"\r\n                            id=\"gender\"\r\n                            value={\"male\"}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />{\" \"}\r\n                          Male\r\n                        </label>\r\n                      </Col>\r\n                      <Col\r\n                        md={{ span: 0, offset: 1 }}\r\n                        xs={{ span: 0, offset: 1 }}\r\n                      >\r\n                        <label className=\"btn btn-outline-success\">\r\n                          <input\r\n                            type=\"radio\"\r\n                            name=\"gender\"\r\n                            id=\"gender\"\r\n                            value={\"female\"}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />{\" \"}\r\n                          Female\r\n                        </label>\r\n                      </Col>\r\n                      <Col\r\n                        md={{ span: 0, offset: 1 }}\r\n                        xs={{ span: 0, offset: 1 }}\r\n                      >\r\n                        <label className=\"btn btn-outline-success\">\r\n                          <input\r\n                            type=\"radio\"\r\n                            name=\"gender\"\r\n                            id=\"gender\"\r\n                            value={\"other\"}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />{\" \"}\r\n                          Other\r\n                        </label>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                  {errors.gender && touched.gender ? (\r\n                    <div className=\"alert-message\">{errors.gender}</div>\r\n                  ) : null}\r\n                  <br />\r\n                  <br />\r\n                  <div className=\"form-check\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      value={values.terms_services}\r\n                      name=\"terms_services\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      className=\"form-check-input\"\r\n                      id=\"checkbox\"\r\n                    />\r\n                    <label className=\"form-check-label\" htmlFor=\"checkbox\">\r\n                      I agree on statements on Terms and services\r\n                    </label>\r\n                  </div>\r\n                  {errors.terms_services && touched.terms_services ? (\r\n                    <div className=\"alert-message\">{errors.terms_services}</div>\r\n                  ) : null}\r\n                  <br />\r\n                  <Button\r\n                    variant=\"success\"\r\n                    size=\"lg\"\r\n                    block\r\n                    type=\"submit\"\r\n                    disabled={isSubmitting || values.terms_services === false}\r\n                  >\r\n                    Register\r\n                  </Button>\r\n                  <br />\r\n                  <br />\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}